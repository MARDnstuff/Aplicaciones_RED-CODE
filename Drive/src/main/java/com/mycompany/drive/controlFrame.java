/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.drive;
import java.awt.Color;
import java.awt.Container;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.tree.TreePath;


/**
 *
 * @author Mauricio
 */
public class controlFrame extends javax.swing.JFrame {
    public String selElement = "not selected";
    /**
     * Creates new form controlFrame
     */
    public controlFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        background = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        Home = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        remoteFilesPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        uploadFilePanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        uploadDirPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        downloadFilePanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        downloadDirPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        deleteFilePanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        deleteDirPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        localFilesPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        FilesView = new javax.swing.JScrollPane();
        Tree1 = new javax.swing.JTree();
        localButtonsPanel = new javax.swing.JPanel();
        uploadBTN = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        deleteLocalBTN = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        remoteButtonsPanel = new javax.swing.JPanel();
        downloadBTN = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        deleteRemoteBTN = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        loadingLabel = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background.setBackground(new java.awt.Color(255, 255, 255));
        background.setName("background"); // NOI18N
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Home.setBackground(new java.awt.Color(102, 102, 255));
        Home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HomeMouseExited(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Inicio");

        javax.swing.GroupLayout HomeLayout = new javax.swing.GroupLayout(Home);
        Home.setLayout(HomeLayout);
        HomeLayout.setHorizontalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(107, Short.MAX_VALUE))
        );
        HomeLayout.setVerticalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(Home, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 160, 40));

        remoteFilesPanel.setBackground(new java.awt.Color(102, 102, 255));
        remoteFilesPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        remoteFilesPanel.setPreferredSize(new java.awt.Dimension(200, 50));
        remoteFilesPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                remoteFilesPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                remoteFilesPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                remoteFilesPanelMouseExited(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Archivos remotos");

        javax.swing.GroupLayout remoteFilesPanelLayout = new javax.swing.GroupLayout(remoteFilesPanel);
        remoteFilesPanel.setLayout(remoteFilesPanelLayout);
        remoteFilesPanelLayout.setHorizontalGroup(
            remoteFilesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remoteFilesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(67, Short.MAX_VALUE))
        );
        remoteFilesPanelLayout.setVerticalGroup(
            remoteFilesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remoteFilesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.add(remoteFilesPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 160, 40));

        uploadFilePanel.setBackground(new java.awt.Color(102, 102, 255));
        uploadFilePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        uploadFilePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                uploadFilePanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                uploadFilePanelMouseExited(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Subir archivo");

        javax.swing.GroupLayout uploadFilePanelLayout = new javax.swing.GroupLayout(uploadFilePanel);
        uploadFilePanel.setLayout(uploadFilePanelLayout);
        uploadFilePanelLayout.setHorizontalGroup(
            uploadFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(88, Short.MAX_VALUE))
        );
        uploadFilePanelLayout.setVerticalGroup(
            uploadFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.add(uploadFilePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 160, 40));

        uploadDirPanel.setBackground(new java.awt.Color(102, 102, 255));
        uploadDirPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        uploadDirPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                uploadDirPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                uploadDirPanelMouseExited(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Subir carpeta");

        javax.swing.GroupLayout uploadDirPanelLayout = new javax.swing.GroupLayout(uploadDirPanel);
        uploadDirPanel.setLayout(uploadDirPanelLayout);
        uploadDirPanelLayout.setHorizontalGroup(
            uploadDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadDirPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        uploadDirPanelLayout.setVerticalGroup(
            uploadDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadDirPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.add(uploadDirPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 160, 40));

        downloadFilePanel.setBackground(new java.awt.Color(102, 102, 255));
        downloadFilePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        downloadFilePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                downloadFilePanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                downloadFilePanelMouseExited(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Descargar archivo");

        javax.swing.GroupLayout downloadFilePanelLayout = new javax.swing.GroupLayout(downloadFilePanel);
        downloadFilePanel.setLayout(downloadFilePanelLayout);
        downloadFilePanelLayout.setHorizontalGroup(
            downloadFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downloadFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(63, Short.MAX_VALUE))
        );
        downloadFilePanelLayout.setVerticalGroup(
            downloadFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downloadFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.add(downloadFilePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 160, 40));

        downloadDirPanel.setBackground(new java.awt.Color(102, 102, 255));
        downloadDirPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        downloadDirPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                downloadDirPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                downloadDirPanelMouseExited(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Descargar carpeta");

        javax.swing.GroupLayout downloadDirPanelLayout = new javax.swing.GroupLayout(downloadDirPanel);
        downloadDirPanel.setLayout(downloadDirPanelLayout);
        downloadDirPanelLayout.setHorizontalGroup(
            downloadDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downloadDirPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        downloadDirPanelLayout.setVerticalGroup(
            downloadDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downloadDirPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.add(downloadDirPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 160, 40));

        deleteFilePanel.setBackground(new java.awt.Color(102, 102, 255));
        deleteFilePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteFilePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteFilePanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteFilePanelMouseExited(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Eliminar archivo");

        javax.swing.GroupLayout deleteFilePanelLayout = new javax.swing.GroupLayout(deleteFilePanel);
        deleteFilePanel.setLayout(deleteFilePanelLayout);
        deleteFilePanelLayout.setHorizontalGroup(
            deleteFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(76, Short.MAX_VALUE))
        );
        deleteFilePanelLayout.setVerticalGroup(
            deleteFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.add(deleteFilePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 160, 40));

        deleteDirPanel.setBackground(new java.awt.Color(102, 102, 255));
        deleteDirPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteDirPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteDirPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteDirPanelMouseExited(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Eliminar carpeta");

        javax.swing.GroupLayout deleteDirPanelLayout = new javax.swing.GroupLayout(deleteDirPanel);
        deleteDirPanel.setLayout(deleteDirPanelLayout);
        deleteDirPanelLayout.setHorizontalGroup(
            deleteDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteDirPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addContainerGap(74, Short.MAX_VALUE))
        );
        deleteDirPanelLayout.setVerticalGroup(
            deleteDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteDirPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.add(deleteDirPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 160, 40));

        localFilesPanel2.setBackground(new java.awt.Color(102, 102, 255));
        localFilesPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        localFilesPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                localFilesPanel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                localFilesPanel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                localFilesPanel2MouseExited(evt);
            }
        });

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Archivos Locales");

        javax.swing.GroupLayout localFilesPanel2Layout = new javax.swing.GroupLayout(localFilesPanel2);
        localFilesPanel2.setLayout(localFilesPanel2Layout);
        localFilesPanel2Layout.setHorizontalGroup(
            localFilesPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(localFilesPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addContainerGap(71, Short.MAX_VALUE))
        );
        localFilesPanel2Layout.setVerticalGroup(
            localFilesPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(localFilesPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.add(localFilesPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 160, 40));

        background.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 470));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        titleLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        titleLabel.setText("Sistema de Almacenamiento");

        FilesView.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(104, 104, 255)));
        FilesView.setForeground(new java.awt.Color(240, 240, 240));

        Tree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                Tree1ValueChanged(evt);
            }
        });
        FilesView.setViewportView(Tree1);

        localButtonsPanel.setBackground(new java.awt.Color(255, 255, 255));

        uploadBTN.setBackground(new java.awt.Color(0, 204, 0));
        uploadBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        uploadBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadBTNMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                uploadBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                uploadBTNMouseExited(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Subir");

        javax.swing.GroupLayout uploadBTNLayout = new javax.swing.GroupLayout(uploadBTN);
        uploadBTN.setLayout(uploadBTNLayout);
        uploadBTNLayout.setHorizontalGroup(
            uploadBTNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadBTNLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel11)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        uploadBTNLayout.setVerticalGroup(
            uploadBTNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );

        deleteLocalBTN.setBackground(new java.awt.Color(255, 0, 0));
        deleteLocalBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteLocalBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteLocalBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteLocalBTNMouseExited(evt);
            }
        });

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Eliminar");

        javax.swing.GroupLayout deleteLocalBTNLayout = new javax.swing.GroupLayout(deleteLocalBTN);
        deleteLocalBTN.setLayout(deleteLocalBTNLayout);
        deleteLocalBTNLayout.setHorizontalGroup(
            deleteLocalBTNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteLocalBTNLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(29, 29, 29))
        );
        deleteLocalBTNLayout.setVerticalGroup(
            deleteLocalBTNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout localButtonsPanelLayout = new javax.swing.GroupLayout(localButtonsPanel);
        localButtonsPanel.setLayout(localButtonsPanelLayout);
        localButtonsPanelLayout.setHorizontalGroup(
            localButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(localButtonsPanelLayout.createSequentialGroup()
                .addComponent(uploadBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteLocalBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        localButtonsPanelLayout.setVerticalGroup(
            localButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(uploadBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(deleteLocalBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        remoteButtonsPanel.setBackground(new java.awt.Color(255, 255, 255));

        downloadBTN.setBackground(new java.awt.Color(0, 204, 0));
        downloadBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        downloadBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                downloadBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                downloadBTNMouseExited(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Descargar");

        javax.swing.GroupLayout downloadBTNLayout = new javax.swing.GroupLayout(downloadBTN);
        downloadBTN.setLayout(downloadBTNLayout);
        downloadBTNLayout.setHorizontalGroup(
            downloadBTNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downloadBTNLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel14)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        downloadBTNLayout.setVerticalGroup(
            downloadBTNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        deleteRemoteBTN.setBackground(new java.awt.Color(255, 0, 0));
        deleteRemoteBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteRemoteBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteRemoteBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteRemoteBTNMouseExited(evt);
            }
        });

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Eliminar");

        javax.swing.GroupLayout deleteRemoteBTNLayout = new javax.swing.GroupLayout(deleteRemoteBTN);
        deleteRemoteBTN.setLayout(deleteRemoteBTNLayout);
        deleteRemoteBTNLayout.setHorizontalGroup(
            deleteRemoteBTNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteRemoteBTNLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(27, 27, 27))
        );
        deleteRemoteBTNLayout.setVerticalGroup(
            deleteRemoteBTNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout remoteButtonsPanelLayout = new javax.swing.GroupLayout(remoteButtonsPanel);
        remoteButtonsPanel.setLayout(remoteButtonsPanelLayout);
        remoteButtonsPanelLayout.setHorizontalGroup(
            remoteButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remoteButtonsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(downloadBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteRemoteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        remoteButtonsPanelLayout.setVerticalGroup(
            remoteButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remoteButtonsPanelLayout.createSequentialGroup()
                .addGroup(remoteButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(downloadBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteRemoteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        loadingLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loadingLabel.setForeground(new java.awt.Color(51, 204, 0));
        loadingLabel.setText("Sube tus archivos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(titleLabel))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(FilesView, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(localButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(remoteButtonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(202, 202, 202)
                                .addComponent(loadingLabel)))
                        .addGap(314, 314, 314)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(347, 347, 347)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(titleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FilesView, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(localButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(remoteButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(loadingLabel)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        background.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 520, 470));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void remoteFilesPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_remoteFilesPanelMouseEntered
        remoteFilesPanel.setBackground(new Color(51,0,204));
    }//GEN-LAST:event_remoteFilesPanelMouseEntered

    private void remoteFilesPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_remoteFilesPanelMouseExited
        remoteFilesPanel.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_remoteFilesPanelMouseExited

    private void uploadFilePanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadFilePanelMouseEntered
        uploadFilePanel.setBackground(new Color(51,0,204));
    }//GEN-LAST:event_uploadFilePanelMouseEntered

    private void uploadFilePanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadFilePanelMouseExited
        uploadFilePanel.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_uploadFilePanelMouseExited

    private void uploadDirPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadDirPanelMouseEntered
        uploadDirPanel.setBackground(new Color(51,0,204));
    }//GEN-LAST:event_uploadDirPanelMouseEntered

    private void uploadDirPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadDirPanelMouseExited
        uploadDirPanel.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_uploadDirPanelMouseExited

    private void downloadFilePanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadFilePanelMouseEntered
        downloadFilePanel.setBackground(new Color(51,0,204));
    }//GEN-LAST:event_downloadFilePanelMouseEntered

    private void downloadFilePanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadFilePanelMouseExited
        downloadFilePanel.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_downloadFilePanelMouseExited

    private void downloadDirPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadDirPanelMouseEntered
        downloadDirPanel.setBackground(new Color(51,0,204));
    }//GEN-LAST:event_downloadDirPanelMouseEntered

    private void downloadDirPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadDirPanelMouseExited
        downloadDirPanel.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_downloadDirPanelMouseExited

    private void deleteFilePanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteFilePanelMouseEntered
        deleteFilePanel.setBackground(new Color(51,0,204));
    }//GEN-LAST:event_deleteFilePanelMouseEntered

    private void deleteFilePanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteFilePanelMouseExited
        deleteFilePanel.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_deleteFilePanelMouseExited

    private void deleteDirPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteDirPanelMouseEntered
        deleteDirPanel.setBackground(new Color(51,0,204));
    }//GEN-LAST:event_deleteDirPanelMouseEntered

    private void deleteDirPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteDirPanelMouseExited
        deleteDirPanel.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_deleteDirPanelMouseExited

    private void HomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseExited
        Home.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_HomeMouseExited

    private void HomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseEntered
        Home.setBackground(new Color(51,0,204));
    }//GEN-LAST:event_HomeMouseEntered

    private void HomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseClicked
        // TODO add your handling code here:
        remoteButtonsPanel.setVisible(false);
        localButtonsPanel.setVisible(false);
        FilesView.setVisible(false);
    }//GEN-LAST:event_HomeMouseClicked

    private void remoteFilesPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_remoteFilesPanelMouseClicked
        // TODO add your handling code here:
        titleLabel.setText("Archivos remotos");
        FilesView.setVisible(true);
        localButtonsPanel.setVisible(false);
        remoteButtonsPanel.setVisible(true);
       // String Udir = "C:\\Users\\reyma\\Desktop\\ALBERTO";//Dirección se debe cambiar a la se usuario
//        UserCloud obj = new UserCloud();
//        JTree obj2 = new JTree (obj.MyFiles(Udir));
//        Tree1.setModel(obj2.getModel());
        System.out.println("remote");
        //CONEXION
        try {
            int pto = 1025;
            Socket cl = new Socket("localhost", pto);
            System.out.println("Conexion con servidor exitosa.. preparado para recibir objeto..");
            
            //INICIO DE CONFIGURACIÓN PARA RECIBIR OBJETO
            ObjectOutputStream oos = new ObjectOutputStream(cl.getOutputStream());
            ObjectInputStream ois = new ObjectInputStream(cl.getInputStream());
            //Recepcion de objeto
            Objeto ob2 = (Objeto) ois.readObject();
            System.out.println("Objeto recibido desde " + cl.getInetAddress() + ":" + cl.getPort() + " con los datos:");
            System.out.println("Flag:" + ob2.getX());
            JTree arbol = new JTree(ob2.getTree());
            Tree1.setModel(arbol.getModel());
            //Envio de datos de confirmación
            /*
            Objeto ob = new Objeto(0,ob2.getTree());
            System.out.println("Enviando objeto con Flag: " + ob.getX());
            oos.writeObject(ob);
            oos.flush();
            System.out.println("Objeto enviado..");
            ois.close();*/
            oos.close();
            cl.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_remoteFilesPanelMouseClicked

    private void localFilesPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_localFilesPanel2MouseClicked
        // TODO add your handling code here:
        titleLabel.setText("Archivos Locales");
        FilesView.setVisible(true);
        localButtonsPanel.setVisible(true);
        remoteButtonsPanel.setVisible(false);
        String Udir = "C:\\Users\\Mauricio\\Documents\\ESCOM\\5semestre\\RedesII\\User_Files";//Dirección se debe cambiar a la se usuario
        UserCloud obj = new UserCloud();
        JTree obj2 = new JTree (obj.MyFiles(Udir));
        Tree1.setModel(obj2.getModel());
        System.out.println("local");
    }//GEN-LAST:event_localFilesPanel2MouseClicked

    private void localFilesPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_localFilesPanel2MouseEntered
        // TODO add your handling code here:
         localFilesPanel2.setBackground(new Color(51,0,204));
    }//GEN-LAST:event_localFilesPanel2MouseEntered

    private void localFilesPanel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_localFilesPanel2MouseExited
        // TODO add your handling code here:
        localFilesPanel2.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_localFilesPanel2MouseExited

    private void uploadBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadBTNMouseExited
        uploadBTN.setBackground(new Color(0,204,0));
    }//GEN-LAST:event_uploadBTNMouseExited

    private void uploadBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadBTNMouseEntered
        uploadBTN.setBackground(new Color(0,153,51));
    }//GEN-LAST:event_uploadBTNMouseEntered

    private void Tree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_Tree1ValueChanged
        // TODO add your handling code here:
        if(Tree1.getSelectionPath().getLastPathComponent() != null){
            selElement =  Tree1.getSelectionPath().getLastPathComponent().toString();
        }
        System.out.println(selElement);
    }//GEN-LAST:event_Tree1ValueChanged

    private void deleteLocalBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteLocalBTNMouseEntered
        deleteLocalBTN.setBackground(new Color(204,0,0));
    }//GEN-LAST:event_deleteLocalBTNMouseEntered

    private void deleteLocalBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteLocalBTNMouseExited
        deleteLocalBTN.setBackground(new Color(255,0,0));
    }//GEN-LAST:event_deleteLocalBTNMouseExited

    private void downloadBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadBTNMouseEntered
        downloadBTN.setBackground(new Color(0,153,51));
    }//GEN-LAST:event_downloadBTNMouseEntered

    private void downloadBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadBTNMouseExited
        downloadBTN.setBackground(new Color(0,204,0));
    }//GEN-LAST:event_downloadBTNMouseExited

    private void deleteRemoteBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteRemoteBTNMouseEntered
        deleteRemoteBTN.setBackground(new Color(204,0,0));
    }//GEN-LAST:event_deleteRemoteBTNMouseEntered

    private void deleteRemoteBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteRemoteBTNMouseExited
        deleteRemoteBTN.setBackground(new Color(255,0,0));
    }//GEN-LAST:event_deleteRemoteBTNMouseExited

    private void uploadBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadBTNMouseClicked

        //Checking if the user has selected a file or a directory
        if(selElement.equals("not selected") || selElement == null){
           loadingLabel.setText("Selecciona un archivo o carpeta");
        }
        else{
            try {
                //Client for metadata
                int pto = 1026;
                Socket clMetadata = new Socket("localhost", pto);
                System.out.println("Conexion con el servidor exitosa.. Listo para enviar metadatos");
                DataOutputStream nFilesStream = new DataOutputStream(clMetadata.getOutputStream());
                                
                File f = new File(selElement);
                String dirname = "file";
                
                //Checking if the File instance is a file or a directory
                if(!f.isDirectory()){
                    nFilesStream.writeInt(1);
                    nFilesStream.flush();
                    nFilesStream.writeUTF(dirname);
                    nFilesStream.flush();
                    String nombre = f.getName();
                    String path = f.getAbsolutePath();
                    long tam = f.length();
                    System.out.println("Preparandose pare enviar archivo "+path+" de "+tam+" bytes\n\n");
                     //Client for files
                    Socket clFiles = new Socket("localhost", pto+1);
                    System.out.println("Conexion con el servidor exitosa.. Listo para enviar archivos..");
                    DataOutputStream fileOS = new DataOutputStream(clFiles.getOutputStream());
                    DataInputStream fileIS = new DataInputStream(new FileInputStream(path));
                    fileOS.writeUTF(nombre);
                    fileOS.flush();
                    fileOS.writeLong(tam);
                    fileOS.flush();
                    long enviados = 0;
                    int l=0,porcentaje=0;
                    while(enviados<tam){
                        byte[] b = new byte[20000];
                        l=fileIS.read(b);
                        loadingLabel.setText("Enviando archivo...("+porcentaje+"%)");
                        System.out.println("enviados: "+l);
                        fileOS.write(b,0,l);
                        fileOS.flush();
                        enviados = enviados + l;
                        porcentaje = (int)((enviados*100)/tam);
                        System.out.print("\rEnviado el "+porcentaje+" % del archivo");
                    }//while
                    System.out.println("\nArchivo enviado..");
                    loadingLabel.setText("Archivo enviado");
                    fileIS.close();
                    fileOS.close();
                    clFiles.close();
                }
                //The file is a directory
                else{
                    File[] files = f.listFiles();
                    dirname = f.getName();
                    nFilesStream.writeInt(files.length);
                    nFilesStream.flush();
                    nFilesStream.writeUTF(dirname);
                    nFilesStream.flush();
                    for(int i = 0; i < files.length; i++){
                        String nombre = files[i].getName();
                        String path = files[i].getAbsolutePath();
                        long tam = files[i].length();
                        System.out.println("Preparandose pare enviar archivo "+path+" de "+tam+" bytes\n\n");
                         //Client for files
                        Socket clFiles = new Socket("localhost", pto+1);
                        System.out.println("Conexion con el servidor exitosa.. Listo para enviar archivos..");
                        DataOutputStream fileOS = new DataOutputStream(clFiles.getOutputStream());
                        DataInputStream fileIS = new DataInputStream(new FileInputStream(path));
                        fileOS.writeUTF(nombre);
                        fileOS.flush();
                        fileOS.writeLong(tam);
                        fileOS.flush();
                        long enviados = 0;
                        int l=0,porcentaje=0;
                        loadingLabel.setText("Enviando archivo " + (i+1) + "...");
                        while(enviados<tam){
                            byte[] b = new byte[1500];
                            l=fileIS.read(b);
                            System.out.println("enviados: "+l);
                            fileOS.write(b,0,l);
                            fileOS.flush();
                            enviados = enviados + l;
                            porcentaje = (int)((enviados*100)/tam);
                            System.out.print("\rEnviado el "+porcentaje+" % del archivo");
                        }//while
                        System.out.println("\nArchivo enviado..");
                        fileIS.close();
                        fileOS.close();
                        clFiles.close();
                    }
                    loadingLabel.setText("Carpeta enviada");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_uploadBTNMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(controlFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(controlFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(controlFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(controlFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new controlFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane FilesView;
    private javax.swing.JPanel Home;
    private javax.swing.JTree Tree1;
    private javax.swing.JPanel background;
    private javax.swing.JPanel deleteDirPanel;
    private javax.swing.JPanel deleteFilePanel;
    private javax.swing.JPanel deleteLocalBTN;
    private javax.swing.JPanel deleteRemoteBTN;
    private javax.swing.JPanel downloadBTN;
    private javax.swing.JPanel downloadDirPanel;
    private javax.swing.JPanel downloadFilePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel loadingLabel;
    private javax.swing.JPanel localButtonsPanel;
    private javax.swing.JPanel localFilesPanel2;
    private javax.swing.JPanel remoteButtonsPanel;
    private javax.swing.JPanel remoteFilesPanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel uploadBTN;
    private javax.swing.JPanel uploadDirPanel;
    private javax.swing.JPanel uploadFilePanel;
    // End of variables declaration//GEN-END:variables
}
